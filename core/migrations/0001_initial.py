# Generated by Django 4.2 on 2025-10-13 01:54

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(default='', max_length=100)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('teacher', 'Teacher'), ('student', 'Student')], default='student', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('yearId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('yearCode', models.CharField(max_length=20, unique=True)),
                ('yearName', models.CharField(max_length=100)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('departmentId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('departmentCode', models.CharField(max_length=20, unique=True)),
                ('departmentName', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=10)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('documentTypeId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('maxRequestsPerSemester', models.IntegerField()),
                ('processingDays', models.IntegerField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('majorId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('majorCode', models.CharField(max_length=20, unique=True)),
                ('majorName', models.CharField(max_length=100)),
                ('durationYears', models.IntegerField()),
                ('totalCredits', models.IntegerField()),
                ('status', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='core.department')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('targetAudience', models.CharField(choices=[('all', 'All'), ('student', 'Students'), ('teacher', 'Teachers'), ('admin', 'Admins'), ('class', 'Class'), ('department', 'Department')], default='all', max_length=10)),
                ('targetId', models.TextField(blank=True, default='[]')),
                ('notificationType', models.CharField(choices=[('general', 'General'), ('academic', 'Academic'), ('administrative', 'Administrative'), ('urgent', 'Urgent')], default='general', max_length=14)),
                ('priority', models.IntegerField()),
                ('scheduledAt', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=10)),
                ('createdBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semesterId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('semesterCode', models.CharField(max_length=20, unique=True)),
                ('semesterName', models.CharField(max_length=100)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('registrationStart', models.DateTimeField()),
                ('registrationEnd', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=10)),
                ('academicYear', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='core.academicyear')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('adminId', models.CharField(max_length=20, unique=True)),
                ('adminCode', models.CharField(max_length=20, unique=True)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('studentId', models.CharField(max_length=20, unique=True)),
                ('studentCode', models.CharField(max_length=20, unique=True)),
                ('dateOfBirth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='male', max_length=10)),
                ('enrollmentYear', models.IntegerField()),
                ('gpa', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('totalCredits', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subjectId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('subjectCode', models.CharField(max_length=20, unique=True)),
                ('subjectName', models.CharField(max_length=100)),
                ('credits', models.IntegerField()),
                ('theoryHours', models.IntegerField()),
                ('practiceHours', models.IntegerField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=10)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='core.department')),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='required_for', to='core.subject')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('token', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationRecipient',
            fields=[
                ('recipientId', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('deliveryStatus', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('readAt', models.DateTimeField(blank=True, null=True)),
                ('deliveredAt', models.DateTimeField(default=datetime.date.today)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='core.notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseClass',
            fields=[
                ('courseClassId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('courseCode', models.CharField(max_length=20, unique=True)),
                ('courseName', models.CharField(max_length=100)),
                ('room', models.CharField(max_length=50)),
                ('schedule', models.DateTimeField(blank=True, null=True)),
                ('maxStudents', models.IntegerField()),
                ('currentStudents', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_classes', to='core.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_classes', to='core.subject')),
            ],
        ),
        migrations.CreateModel(
            name='TuitionFee',
            fields=[
                ('tuitionFee', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('totalCredit', models.IntegerField()),
                ('feePerCredit', models.DecimalField(decimal_places=3, max_digits=10)),
                ('totalAmount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('paidAmount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('paymentStatus', models.CharField(choices=[('unpaid', 'Unpaid'), ('partial_paid', 'Partial Paid'), ('paid', 'Paid')], default='unpaid', max_length=12)),
                ('dueDate', models.DateField()),
                ('paymentDate', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuition_fees', to='core.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tuition_fees', to='core.student')),
                ('updatedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_tuitions', to='core.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('teacherId', models.CharField(max_length=20, unique=True)),
                ('teacherCode', models.CharField(max_length=20, unique=True)),
                ('position', models.CharField(max_length=50)),
                ('hireDate', models.DateField(default=datetime.date.today)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department')),
            ],
        ),
        migrations.AddField(
            model_name='subject',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='subjects', to='core.teacher'),
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('classId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('classCode', models.CharField(max_length=20, unique=True)),
                ('className', models.CharField(max_length=100)),
                ('academicYear', models.CharField(max_length=20)),
                ('maxStudents', models.IntegerField()),
                ('currentStudents', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_classes', to='core.major')),
                ('advisorTeacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advisor_classes', to='core.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='studentClass',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.studentclass'),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('gradeId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('assginmentscore', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('midterm_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('final_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('average_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('letterGrade', models.CharField(max_length=10)),
                ('gradePoint', models.DecimalField(decimal_places=1, max_digits=3)),
                ('isPassed', models.BooleanField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('courseClass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.courseclass')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.subject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.student')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades', to='core.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentRequest',
            fields=[
                ('requestId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('requestDate', models.DateTimeField()),
                ('purpose', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('approvedDate', models.DateTimeField(blank=True, null=True)),
                ('completedDate', models.DateTimeField(blank=True, null=True)),
                ('rejectionReason', models.TextField(blank=True, null=True)),
                ('documentType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_requests', to='core.documenttype')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_requests', to='core.semester')),
                ('approvedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_requests', to='core.admin')),
                ('student', models.ManyToManyField(related_name='document_requests', to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='headTeacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_departments', to='core.teacher'),
        ),
        migrations.CreateModel(
            name='CourseRegistration',
            fields=[
                ('registrationId', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('registrationDate', models.DateField()),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('dropped', 'Dropped'), ('completed', 'Completed')], default='registered', max_length=20)),
                ('courseClass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_registrations', to='core.courseclass')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_registrations', to='core.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_registrations', to='core.student')),
            ],
        ),
        migrations.AddField(
            model_name='courseclass',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_classes', to='core.teacher'),
        ),
    ]
